name: OpenUtility-CI/DI

on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # 部署到 ECS
    - name: Deploy to ECS
      env:
        ECS_HOST: ${{ secrets.ECS_HOST }}         # ECS 的公网 IP
        ECS_USER: ${{ secrets.ECS_USER }}         # SSH 用户名
        ECS_KEY: ${{ secrets.ECS_KEY }}           # SSH 私钥
        APP_PATH: "/home/openutility"             # ECS 上的目标路径
        DATABASE_PASSWORD: ${{ secrets.database_password }}  # 数据库密码
      run: |
        echo "${DATABASE_PASSWORD}"
        # 添加私钥到 SSH 配置
        echo "${ECS_KEY}" > ecs_key.pem
        chmod 600 ecs_key.pem
        # 使用 ssh-keyscan 信任 ECS 主机
        mkdir -p ~/.ssh
        ssh-keyscan -H $ECS_HOST >> ~/.ssh/known_hosts
        # 上传构建产物到 ECS
        scp -i ecs_key.pem target/*.jar $ECS_USER@$ECS_HOST:$APP_PATH/app.jar
        # 登录到 ECS 并更新 Docker 容器
        ssh -i ecs_key.pem -tt $ECS_USER@$ECS_HOST << EOF
        cd $APP_PATH
        # 删除旧的 Docker 容器
        docker rm -f app || true
        # 运行新的 Docker 容器并传递数据库密码
        docker run -p 8080:8080 --restart=always --name app \
          -v /home/openutility:/app \
          -v /home/openutility/logs:/app/logs \
          -e SPRING_DATASOURCE_PASSWORD=$DATABASE_PASSWORD \
          -d openjdk:17 sh -c "java -jar /app/app.jar"
        exit
        EOF
